{"version":3,"sources":["../src/index.ts","../src/components/ui/enhanced-data-table.tsx","../src/components/ui/button.tsx","../src/lib/utils.ts","../src/components/ui/input.tsx","../src/components/ui/checkbox.tsx","../src/components/ui/badge.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/popover.tsx","../src/components/ui/column-configurator.tsx","../src/components/ui/label.tsx","../src/components/ui/data-table-pagination.tsx","../src/components/ui/pagination.tsx","../src/components/ui/select.tsx","../src/hooks/useTableGrouping.ts","../src/components/ui/simple-data-table.tsx","../src/components/ui/advanced-data-table-demo.tsx","../src/components/ui/scroll-area.tsx","../src/components/ui/table.tsx","../src/components/ui/sortable-table.tsx","../src/components/ui/groupable-table-row.tsx"],"sourcesContent":["// Main enhanced data table component\nexport { default as EnhancedDataTable } from './components/ui/enhanced-data-table';\nexport { default as SimpleDataTable } from './components/ui/simple-data-table';\nexport { default as AdvancedDataTableDemo } from './components/ui/advanced-data-table-demo';\n\n// Individual UI components\nexport { Button, buttonVariants } from './components/ui/button';\nexport { Input } from './components/ui/input';\nexport { Checkbox } from './components/ui/checkbox';\nexport { Badge, badgeVariants } from './components/ui/badge';\nexport { Label } from './components/ui/label';\n\n// Dropdown menu components\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n} from './components/ui/dropdown-menu';\n\n// Popover components\nexport { Popover, PopoverTrigger, PopoverContent } from './components/ui/popover';\n\n// Scroll area components\nexport { ScrollArea, ScrollBar } from './components/ui/scroll-area';\n\n// Table components\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n} from './components/ui/table';\n\n// Pagination components\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from './components/ui/pagination';\n\n// Select components\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n} from './components/ui/select';\n\n// Enhanced data table specific components\nexport { SortableTableHeader } from './components/ui/sortable-table';\nexport { default as ColumnConfigurator } from './components/ui/column-configurator';\nexport { default as DataTablePagination } from './components/ui/data-table-pagination';\nexport { GroupableTableRow } from './components/ui/groupable-table-row';\n\n// Hooks\nexport { useTableGrouping } from './hooks/useTableGrouping';\n\n// Types\nexport type {\n  DataTableColumn,\n  DataTableFilter,\n  DataTableBulkAction,\n  DataTableConfig\n} from './components/ui/enhanced-data-table';\n\nexport type { SortConfig } from './components/ui/sortable-table';\nexport type { GroupedRecord, GroupSummary } from './hooks/useTableGrouping';\nexport type { ColumnItem } from './components/ui/column-configurator';\nexport type { ButtonProps } from './components/ui/button';\nexport type { BadgeProps } from './components/ui/badge';\n\n// Define DataTableRecord here since it's a simple type\nexport type DataTableRecord = Record<string, unknown> & {\n  id: string;\n};\n\n// Utilities\nexport { cn, formatCurrency, formatDate } from './lib/utils';\n","import React, { useState, useMemo, useCallback, useRef, useEffect } from 'react';\nimport { Button } from \"./button\";\nimport { Input } from \"./input\";\nimport { Checkbox } from \"./checkbox\";\nimport { Badge } from \"./badge\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuSeparator, DropdownMenuTrigger, DropdownMenuCheckboxItem, DropdownMenuLabel, DropdownMenuGroup } from \"./dropdown-menu\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"./popover\";\nimport { ScrollArea, ScrollBar } from \"./scroll-area\";\nimport { Search, Filter, FileText, Maximize, Minimize, ChevronDown, Bell, FileDown, FileSpreadsheet, Settings, MoreHorizontal, Columns, Pin, Group, ChevronRight } from 'lucide-react';\nimport { SortableTableHeader, SortConfig } from './sortable-table';\nimport ColumnConfigurator from './column-configurator';\nimport DataTablePagination from './data-table-pagination';\nimport { useTableGrouping, type GroupedRecord } from '../../hooks/useTableGrouping';\nimport { GroupableTableRow } from './groupable-table-row';\n\n// ====================== TYPE DEFINITIONS ======================\n\ntype DataTableRecord = Record<string, unknown> & {\n  id: string;\n};\nexport interface DataTableColumn<T = DataTableRecord> {\n  key: string;\n  label: string;\n  enabled: boolean;\n  position: number;\n  width?: string;\n  minWidth?: string;\n  maxWidth?: string;\n  frozen?: boolean;\n  sortable?: boolean;\n  resizable?: boolean;\n  groupable?: boolean; // New: Allow grouping by this column\n  render?: (value: unknown, record: T) => React.ReactNode;\n  className?: string;\n}\nexport interface DataTableFilter {\n  key: string;\n  label: string;\n  type: 'multi-select' | 'date-range' | 'text' | 'number';\n  searchable?: boolean;\n  statusColors?: boolean;\n  options?: {\n    value: string;\n    label: string;\n    color?: string;\n  }[];\n}\nexport interface DataTableBulkAction {\n  key: string;\n  label: string;\n  icon?: React.ComponentType<{\n    className?: string;\n  }>;\n  onClick: (selectedIds: string[]) => void;\n  requiresSelection?: boolean;\n}\n\nexport interface GroupingConfig {\n  enabled: boolean;\n  showDropdown?: boolean;\n  position?: 'toolbar' | 'filters' | 'next-to-filters' | 'top';\n  options?: string[];\n  defaultGroupBy?: string | null;\n  summaryCalculator?: (records: any[]) => Record<string, unknown>;\n}\nexport interface DataTableConfig<T = DataTableRecord> {\n  // Table identification\n  tableId: string;\n\n  // Data and columns\n  data: T[];\n  columns?: DataTableColumn<T>[]; // Optional - will auto-generate if not provided\n\n  // Search configuration\n  searchableFields?: string[]; // Optional - will auto-detect if not provided\n  searchPlaceholder?: string;\n\n  // Filter configuration\n  filters?: DataTableFilter[];\n  activeFilters?: Record<string, string[]>;\n  onFilterChange?: (filterKey: string, values: string[]) => void;\n  onClearAllFilters?: () => void;\n\n  // Selection configuration\n  enableSelection?: boolean;\n  selectedRows?: string[];\n  onSelectionChange?: (selectedIds: string[]) => void;\n  enableSelectAllPages?: boolean;\n\n  // Sorting configuration\n  defaultSort?: SortConfig;\n  onSortChange?: (sortConfig: SortConfig) => void;\n\n  // Pagination configuration\n  enablePagination?: boolean;\n  currentPage?: number;\n  rowsPerPage?: number;\n  onPageChange?: (page: number) => void;\n  onRowsPerPageChange?: (rowsPerPage: number) => void;\n\n  // Actions configuration\n  bulkActions?: DataTableBulkAction[];\n  rowActions?: (record: T) => React.ReactNode;\n\n  // Display configuration\n  enableFullScreen?: boolean;\n  enableColumnConfiguration?: boolean;\n  \n  // Grouping configuration - NEW IMPROVED API\n  grouping?: boolean | 'auto' | GroupingConfig;\n  showGroupingDropdown?: boolean; // Built-in UI control\n  groupingDropdownPosition?: 'toolbar' | 'filters' | 'next-to-filters' | 'top';\n  groupingOptions?: string[] | 'auto'; // Fields that can be grouped by\n  defaultGroupBy?: string | 'auto'; // Initial grouping\n  \n  // Legacy grouping API (for backward compatibility)\n  enableGrouping?: boolean;\n  groupBy?: string | null;\n  onGroupByChange?: (groupBy: string | null) => void;\n  groupSummaryCalculator?: (records: T[]) => Record<string, unknown>;\n\n  // Height configuration\n  dynamicHeight?: boolean;\n  minHeight?: number;\n  maxHeight?: number;\n  rowHeight?: number;\n\n  // Custom rendering\n  emptyState?: React.ReactNode;\n  customToolbar?: React.ComponentType<Record<string, unknown>>;\n\n  // Event handlers\n  onRowClick?: (record: T) => void;\n  onColumnsChange?: (columns: DataTableColumn<T>[]) => void;\n  onColumnWidthsChange?: (widths: Record<string, string>) => void;\n}\n\n// ====================== AUTO-GENERATION UTILITIES ======================\n\n// Smart column generator - automatically creates columns from data structure\nconst generateColumnsFromData = <T extends DataTableRecord>(data: T[], existingColumns?: DataTableColumn<T>[]): DataTableColumn<T>[] => {\n  if (data.length === 0) return existingColumns || [];\n  \n  const sampleRecord = data[0];\n  const autoColumns: DataTableColumn<T>[] = [];\n  \n  Object.keys(sampleRecord).forEach((key, index) => {\n    // Skip if column already exists\n    if (existingColumns?.some(col => col.key === key)) return;\n    \n    const value = sampleRecord[key];\n    const values = data.slice(0, 10).map(r => r[key]); // Sample first 10 records\n    \n    // Determine column properties based on data type and content\n    const column: DataTableColumn<T> = {\n      key,\n      label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1').trim(),\n      enabled: key !== 'id', // Hide ID by default\n      position: index,\n      sortable: true,\n      resizable: true,\n      groupable: typeof value === 'string' || typeof value === 'boolean',\n    };\n    \n    // Set appropriate width based on content\n    if (key === 'id') {\n      column.width = '80px';\n    } else if (typeof value === 'boolean') {\n      column.width = '100px';\n    } else if (typeof value === 'number') {\n      column.width = '120px';\n      column.className = 'text-right';\n    } else if (key.toLowerCase().includes('email')) {\n      column.width = '200px';\n    } else if (key.toLowerCase().includes('name')) {\n      column.width = '180px';\n      column.frozen = true; // Names are often good frozen columns\n    } else if (key.toLowerCase().includes('date')) {\n      column.width = '140px';\n      // Auto-format dates\n      column.render = (value: unknown) => {\n        if (!value) return '';\n        const date = new Date(value as string);\n        return isNaN(date.getTime()) ? String(value) : date.toLocaleDateString();\n      };\n    } else if (typeof value === 'string') {\n      // Estimate width based on content length\n      const maxLength = Math.max(...values.map(v => String(v || '').length));\n      column.width = `${Math.min(Math.max(maxLength * 8 + 40, 120), 300)}px`;\n    }\n    \n    // Auto-render for common field types\n    if (key.toLowerCase().includes('status') && typeof value === 'string') {\n      column.render = (value: unknown) => {\n        const statusColors: Record<string, string> = {\n          active: 'bg-green-100 text-green-800',\n          inactive: 'bg-red-100 text-red-800',\n          pending: 'bg-yellow-100 text-yellow-800',\n          completed: 'bg-blue-100 text-blue-800',\n          draft: 'bg-gray-100 text-gray-800'\n        };\n        const colorClass = statusColors[String(value).toLowerCase()] || 'bg-gray-100 text-gray-800';\n        return React.createElement('span', { \n          className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}` \n        }, String(value));\n      };\n    }\n    \n    if (typeof value === 'number' && key.toLowerCase().includes('amount') || key.toLowerCase().includes('price') || key.toLowerCase().includes('salary')) {\n      column.render = (value: unknown) => {\n        return new Intl.NumberFormat('en-US', { \n          style: 'currency', \n          currency: 'USD',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }).format(Number(value) || 0);\n      };\n    }\n    \n    if (typeof value === 'boolean') {\n      column.render = (value: unknown) => {\n        return React.createElement('span', { \n          className: `inline-flex items-center px-2 py-1 rounded text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n          }` \n        }, value ? 'Yes' : 'No');\n      };\n    }\n    \n    autoColumns.push(column);\n  });\n  \n  return [...(existingColumns || []), ...autoColumns];\n};\n\n// Smart filter generator - automatically creates filters from data\nconst generateFiltersFromData = <T extends DataTableRecord>(data: T[], columns: DataTableColumn<T>[]): DataTableFilter[] => {\n  if (data.length === 0) return [];\n  \n  const filters: DataTableFilter[] = [];\n  \n  columns.forEach(column => {\n    const values = data.map(r => r[column.key]).filter(v => v != null);\n    const uniqueValues = [...new Set(values.map(v => String(v)))];\n    \n    // Only create filters for columns with reasonable number of unique values\n    if (uniqueValues.length > 1 && uniqueValues.length <= 20) {\n      if (typeof data[0][column.key] === 'string' || typeof data[0][column.key] === 'boolean') {\n        filters.push({\n          key: column.key,\n          label: column.label,\n          type: 'multi-select',\n          searchable: uniqueValues.length > 5,\n          statusColors: column.key.toLowerCase().includes('status'),\n          options: uniqueValues.sort().map(value => ({\n            value: String(value),\n            label: String(value),\n            color: column.key.toLowerCase().includes('status') ? (\n              value.toLowerCase() === 'active' ? 'green' :\n              value.toLowerCase() === 'inactive' ? 'red' :\n              value.toLowerCase() === 'pending' ? 'yellow' :\n              'gray'\n            ) : undefined\n          }))\n        });\n      }\n    }\n  });\n  \n  return filters;\n};\n\n// Smart grouping options generator - automatically detects groupable fields\nconst generateGroupingOptionsFromData = <T extends DataTableRecord>(data: T[], columns: DataTableColumn<T>[]): string[] => {\n  if (data.length === 0) return [];\n  \n  const groupableFields: string[] = [];\n  \n  columns.forEach(column => {\n    // Only consider enabled columns that are marked as groupable\n    if (!column.enabled || !column.groupable) return;\n    \n    const values = data.map(r => r[column.key]).filter(v => v != null);\n    const uniqueValues = [...new Set(values)];\n    \n    // Good grouping fields have:\n    // 1. Reasonable number of unique values (not too many, not too few)\n    // 2. String or boolean type (categorical data)\n    // 3. At least 2 unique values\n    if (uniqueValues.length >= 2 && uniqueValues.length <= Math.max(10, data.length / 5)) {\n      const firstValue = values[0];\n      if (typeof firstValue === 'string' || typeof firstValue === 'boolean') {\n        groupableFields.push(column.key);\n      }\n    }\n  });\n  \n  // Sort by priority - common grouping fields first\n  return groupableFields.sort((a, b) => {\n    const priority = (field: string) => {\n      const lower = field.toLowerCase();\n      if (lower.includes('status')) return 1;\n      if (lower.includes('department')) return 2;\n      if (lower.includes('position') || lower.includes('role')) return 3;\n      if (lower.includes('type') || lower.includes('category')) return 4;\n      if (lower.includes('location')) return 5;\n      return 10;\n    };\n    return priority(a) - priority(b);\n  });\n};\n\n// Smart default grouping detector\nconst detectDefaultGroupBy = <T extends DataTableRecord>(data: T[], options: string[]): string | null => {\n  if (options.length === 0) return null;\n  \n  // Prefer status fields as default grouping\n  const statusField = options.find(field => field.toLowerCase().includes('status'));\n  if (statusField) return statusField;\n  \n  // Then department\n  const deptField = options.find(field => field.toLowerCase().includes('department'));\n  if (deptField) return deptField;\n  \n  // Finally, just use the first option\n  return options[0];\n};\n\n// Parse grouping configuration into a normalized format\nconst parseGroupingConfig = <T extends DataTableRecord>(\n  data: T[],\n  columns: DataTableColumn<T>[],\n  config: boolean | 'auto' | GroupingConfig | undefined,\n  showGroupingDropdown?: boolean,\n  groupingDropdownPosition?: string,\n  groupingOptions?: string[] | 'auto',\n  defaultGroupBy?: string | 'auto'\n): GroupingConfig => {\n  // Handle disabled state\n  if (config === false || config === undefined) {\n    return { enabled: false };\n  }\n  \n  // Auto-generate configuration\n  if (config === true || config === 'auto') {\n    const autoOptions = generateGroupingOptionsFromData(data, columns);\n    const autoDefault = defaultGroupBy === 'auto' \n      ? detectDefaultGroupBy(data, autoOptions)\n      : defaultGroupBy || detectDefaultGroupBy(data, autoOptions);\n    \n    return {\n      enabled: autoOptions.length > 0,\n      showDropdown: showGroupingDropdown !== false,\n      position: (groupingDropdownPosition as any) || 'toolbar',\n      options: groupingOptions === 'auto' ? autoOptions : (groupingOptions || autoOptions),\n      defaultGroupBy: autoDefault || undefined\n    };\n  }\n  \n  // Use provided configuration\n  return {\n    enabled: config.enabled,\n    showDropdown: config.showDropdown !== false,\n    position: config.position || 'toolbar',\n    options: config.options || generateGroupingOptionsFromData(data, columns),\n    defaultGroupBy: config.defaultGroupBy || detectDefaultGroupBy(data, config.options || []),\n    summaryCalculator: config.summaryCalculator\n  };\n};\n\n// ====================== GROUPING SELECTOR COMPONENT ======================\n\ninterface GroupingSelectorProps<T = DataTableRecord> {\n  groupingConfig: GroupingConfig;\n  columns: DataTableColumn<T>[];\n  currentGroupBy: string | null;\n  onGroupByChange: (groupBy: string | null) => void;\n  expandAllGroups?: () => void;\n  collapseAllGroups?: () => void;\n}\n\nconst GroupingSelector = <T extends DataTableRecord = DataTableRecord>({\n  groupingConfig,\n  columns,\n  currentGroupBy,\n  onGroupByChange,\n  expandAllGroups,\n  collapseAllGroups\n}: GroupingSelectorProps<T>) => {\n  if (!groupingConfig.enabled || !groupingConfig.showDropdown) return null;\n\n  const groupableColumns = columns.filter(col => \n    groupingConfig.options?.includes(col.key) || \n    (groupingConfig.options?.length === 0 && col.groupable !== false)\n  );\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n          <Group className=\"h-4 w-4\" />\n          <span>Group By</span>\n          {currentGroupBy && (\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              {columns.find(col => col.key === currentGroupBy)?.label || currentGroupBy}\n            </Badge>\n          )}\n          <ChevronDown className=\"h-4 w-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuLabel className=\"text-xs\">\n          Group data by column\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        \n        {/* No grouping option */}\n        <DropdownMenuCheckboxItem \n          checked={!currentGroupBy} \n          onCheckedChange={() => onGroupByChange(null)}\n        >\n          No Grouping\n        </DropdownMenuCheckboxItem>\n        \n        <DropdownMenuSeparator />\n        \n        {/* Groupable columns */}\n        {groupableColumns.map(column => (\n          <DropdownMenuCheckboxItem \n            key={column.key}\n            checked={currentGroupBy === column.key} \n            onCheckedChange={(checked) => {\n              if (checked) {\n                onGroupByChange(column.key);\n              } else {\n                onGroupByChange(null);\n              }\n            }}\n          >\n            {column.label}\n          </DropdownMenuCheckboxItem>\n        ))}\n        \n        {currentGroupBy && expandAllGroups && collapseAllGroups && (\n          <>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={expandAllGroups}>\n              <ChevronDown className=\"h-4 w-4 mr-2\" />\n              Expand All Groups\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={collapseAllGroups}>\n              <ChevronRight className=\"h-4 w-4 mr-2\" />\n              Collapse All Groups\n            </DropdownMenuItem>\n          </>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n\n// ====================== ENHANCED DATA TABLE COMPONENT ======================\n\nconst EnhancedDataTable = <T extends DataTableRecord = DataTableRecord,>({\n  tableId,\n  data,\n  columns: initialColumns = [], // Default to empty array for auto-generation\n  searchableFields = [], // Default to empty array for auto-detection\n  searchPlaceholder = \"Search...\",\n  filters = [],\n  activeFilters = {},\n  onFilterChange,\n  onClearAllFilters,\n  enableSelection = true,\n  selectedRows = [],\n  onSelectionChange,\n  enableSelectAllPages = true,\n  defaultSort = {\n    key: 'id',\n    direction: 'desc'\n  },\n  onSortChange,\n  enablePagination = true,\n  currentPage = 1,\n  rowsPerPage = 20,\n  onPageChange,\n  onRowsPerPageChange,\n  bulkActions = [],\n  rowActions,\n  enableFullScreen = true,\n  enableColumnConfiguration = true,\n  \n  // New improved grouping API\n  grouping,\n  showGroupingDropdown,\n  groupingDropdownPosition,\n  groupingOptions,\n  defaultGroupBy,\n  \n  // Legacy grouping API (backward compatibility)\n  enableGrouping = false,\n  groupBy = null,\n  onGroupByChange,\n  groupSummaryCalculator,\n  dynamicHeight = true,\n  minHeight = 200,\n  maxHeight = 400,\n  rowHeight = 48,\n  emptyState,\n  customToolbar: CustomToolbar,\n  onRowClick,\n  onColumnsChange,\n  onColumnWidthsChange\n}: DataTableConfig<T>) => {\n  // ====================== STATE MANAGEMENT ======================\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortConfig, setSortConfig] = useState<SortConfig>(defaultSort);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [filterSearchTerms, setFilterSearchTerms] = useState<Record<string, string>>({});\n  const [selectAllPages, setSelectAllPages] = useState(false);\n  \n  // Internal filter state management when not controlled externally\n  const [internalActiveFilters, setInternalActiveFilters] = useState<Record<string, string[]>>({});\n  const effectiveActiveFilters = activeFilters && Object.keys(activeFilters).length > 0 ? activeFilters : internalActiveFilters;\n  \n  const handleInternalFilterChange = useCallback((filterKey: string, values: string[]) => {\n    if (onFilterChange) {\n      onFilterChange(filterKey, values);\n    } else {\n      setInternalActiveFilters(prev => ({\n        ...prev,\n        [filterKey]: values\n      }));\n    }\n  }, [onFilterChange]);\n  \n  const handleInternalClearAllFilters = useCallback(() => {\n    if (onClearAllFilters) {\n      onClearAllFilters();\n    } else {\n      setInternalActiveFilters({});\n    }\n  }, [onClearAllFilters]);\n  // Auto-generate columns if none or minimal columns provided\n  const autoGeneratedColumns = useMemo(() => {\n    if (initialColumns.length === 0 && data.length > 0) {\n      console.log('🤖 Auto-generating columns from data structure');\n      return generateColumnsFromData(data);\n    }\n    if (initialColumns.length > 0 && data.length > 0) {\n      // Enhance existing columns with auto-generated ones for missing fields\n      return generateColumnsFromData(data, initialColumns);\n    }\n    return initialColumns;\n  }, [data, initialColumns]);\n\n  const [columns, setColumns] = useState<DataTableColumn<T>[]>(autoGeneratedColumns);\n\n  // Update columns when auto-generated columns change\n  useEffect(() => {\n    setColumns(autoGeneratedColumns);\n  }, [autoGeneratedColumns]);\n\n  // Auto-detect searchable fields if not provided\n  const effectiveSearchableFields = useMemo(() => {\n    if (searchableFields.length > 0) return searchableFields;\n    \n    // Auto-detect searchable fields from columns\n    return columns\n      .filter(col => {\n        const sampleValue = data[0]?.[col.key];\n        return typeof sampleValue === 'string' && \n               !col.key.toLowerCase().includes('id') &&\n               col.enabled;\n      })\n      .map(col => col.key)\n      .slice(0, 5); // Limit to first 5 string fields\n  }, [searchableFields, columns, data]);\n\n  // Auto-generate filters if none provided\n  const effectiveFilters = useMemo(() => {\n    if (filters.length > 0) return filters;\n    if (data.length === 0) return [];\n    \n    console.log('🤖 Auto-generating filters from data structure');\n    return generateFiltersFromData(data, columns);\n  }, [filters, data, columns]);\n\n  // ====================== COLUMN RESIZING STATE ======================\n  const [columnWidths, setColumnWidths] = useState<Record<string, string>>(() => {\n    const initialWidths: Record<string, string> = {};\n    initialColumns.forEach(col => {\n      initialWidths[col.key] = col.width || '140px';\n    });\n    return initialWidths;\n  });\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizingColumn, setResizingColumn] = useState<string | null>(null);\n  const resizeStartX = useRef<number>(0);\n  const resizeStartWidth = useRef<number>(0);\n\n  // ====================== EXPERIMENTAL FREEZING STATE ======================\n  const [experimentalFrozenColumns, setExperimentalFrozenColumns] = useState<string[]>([]);\n  const [freezeHeaderRow, setFreezeHeaderRow] = useState(false);\n  const [frozenRowIds, setFrozenRowIds] = useState<string[]>([]);\n\n  // ====================== GROUPING INTEGRATION ======================\n  \n  // Parse and normalize grouping configuration\n  const groupingConfig = useMemo(() => {\n    return parseGroupingConfig(\n      data,\n      columns,\n      grouping,\n      showGroupingDropdown,\n      groupingDropdownPosition,\n      groupingOptions,\n      defaultGroupBy\n    );\n  }, [data, columns, grouping, showGroupingDropdown, groupingDropdownPosition, groupingOptions, defaultGroupBy]);\n  \n  // Internal grouping state management\n  const [internalGroupBy, setInternalGroupBy] = useState<string | null>(\n    groupingConfig.defaultGroupBy || null\n  );\n  \n  // Determine effective grouping state (controlled vs uncontrolled)\n  const effectiveGroupBy = onGroupByChange ? groupBy : internalGroupBy;\n  const effectiveEnableGrouping = groupingConfig.enabled || enableGrouping;\n  \n  const handleGroupByChange = useCallback((newGroupBy: string | null) => {\n    if (onGroupByChange) {\n      onGroupByChange(newGroupBy);\n    } else {\n      setInternalGroupBy(newGroupBy);\n    }\n  }, [onGroupByChange]);\n  \n  const {\n    groupedData,\n    expandedGroups,\n    toggleGroup,\n    collapseAllGroups,\n    expandAllGroups,\n    groupCount\n  } = useTableGrouping(\n    data,\n    effectiveEnableGrouping ? effectiveGroupBy : null,\n    groupingConfig.summaryCalculator || groupSummaryCalculator\n  );\n\n  // ====================== COMPUTED VALUES ======================\n\n  // Get enabled columns and separate frozen from regular columns\n  const enabledColumns = useMemo(() => columns.filter(col => col.enabled).sort((a, b) => a.position - b.position), [columns]);\n\n  // Enhanced frozen columns logic - combines original frozen + experimental frozen\n  const frozenColumns = useMemo(() => {\n    return enabledColumns.filter(col => col.frozen || experimentalFrozenColumns.includes(col.key));\n  }, [enabledColumns, experimentalFrozenColumns]);\n  const scrollableColumns = useMemo(() => enabledColumns.filter(col => !col.frozen && !experimentalFrozenColumns.includes(col.key)), [enabledColumns, experimentalFrozenColumns]);\n\n  // Calculate column widths\n  const getColumnWidth = useCallback((key: string) => {\n    return columnWidths[key] || '140px';\n  }, [columnWidths]);\n\n  // Calculate total table width\n  const totalTableWidth = useMemo(() => {\n    if (isFullScreen) {\n      // In fullscreen, calculate the actual width needed vs viewport width\n      const checkboxWidth = enableSelection ? 48 : 0;\n      const actionWidth = rowActions ? 64 : 0;\n      const minDataColumnsWidth = enabledColumns.length * 120; // Minimum 120px per column\n      const minTotalWidth = checkboxWidth + actionWidth + minDataColumnsWidth + 50;\n      const viewportWidth = Math.max(window.innerWidth - 100, 1400);\n\n      // Use the larger of minimum required width or viewport width\n      return Math.max(minTotalWidth, viewportWidth);\n    }\n    const checkboxWidth = enableSelection ? 48 : 0;\n    const actionWidth = rowActions ? 64 : 0;\n    const frozenWidth = frozenColumns.reduce((acc, col) => acc + parseInt(getColumnWidth(col.key)), 0);\n    const scrollableWidth = scrollableColumns.reduce((acc, col) => acc + parseInt(getColumnWidth(col.key)), 0);\n    return checkboxWidth + actionWidth + frozenWidth + scrollableWidth + 50;\n  }, [enableSelection, rowActions, frozenColumns, scrollableColumns, getColumnWidth, isFullScreen, enabledColumns.length]);\n\n  // Calculate actual column width for rendering (handles fullscreen distribution)\n  const getActualColumnWidth = useCallback((key: string) => {\n    if (!isFullScreen) {\n      return getColumnWidth(key);\n    }\n\n    // In fullscreen mode, distribute available width among columns\n    const fixedWidth = (enableSelection ? 48 : 0) + (rowActions ? 64 : 0);\n    const availableWidth = totalTableWidth - fixedWidth - 50; // Account for borders and padding\n\n    // For checkbox and actions, use fixed width\n    if (key === 'checkbox') return '48px';\n    if (key === 'actions') return '64px';\n\n    // For data columns, try to distribute evenly but respect minimum widths\n    const dataColumns = enabledColumns.length;\n    const distributedWidth = Math.floor(availableWidth / dataColumns);\n    const originalWidth = parseInt(getColumnWidth(key));\n\n    // Use the larger of distributed width or original width, with a minimum of 120px\n    const columnWidth = Math.max(distributedWidth, originalWidth, 120);\n    return `${columnWidth}px`;\n  }, [isFullScreen, getColumnWidth, enableSelection, rowActions, enabledColumns.length, totalTableWidth]);\n\n  // Filter and search data\n  const filteredData = useMemo(() => {\n    // Use grouped data if grouping is enabled, otherwise use original data\n    const sourceData = effectiveEnableGrouping ? groupedData : data;\n    \n    return sourceData.filter(record => {\n      // Skip filtering group headers - they should always be visible\n      if (effectiveEnableGrouping && (record as T & GroupedRecord).isGroupHeader) {\n        return true;\n      }\n      \n      // For grouped data, filter based on original record\n      const recordToFilter = effectiveEnableGrouping ? (record as T & GroupedRecord).originalRecord || record : record;\n      \n      // Search filter\n      const matchesSearch = searchQuery === '' || effectiveSearchableFields.some(field => \n        String(recordToFilter[field]).toLowerCase().includes(searchQuery.toLowerCase())\n      );\n\n      // Active filters\n      const matchesFilters = Object.entries(effectiveActiveFilters).every(([key, values]) => {\n        if (values.length === 0) return true;\n        return values.includes(String(recordToFilter[key]));\n      });\n      return matchesSearch && matchesFilters;\n    });\n  }, [data, groupedData, effectiveEnableGrouping, searchQuery, effectiveSearchableFields, effectiveActiveFilters]);\n\n  // Sort data\n  const sortedData = useMemo(() => {\n    if (!sortConfig.key) return filteredData;\n    \n    // Don't sort when grouping is enabled - preserve group structure\n    if (effectiveEnableGrouping) {\n      return filteredData;\n    }\n    \n    return [...filteredData].sort((a, b) => {\n      const aVal = a[sortConfig.key] as any;\n      const bVal = b[sortConfig.key] as any;\n      if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n      if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, [filteredData, sortConfig, effectiveEnableGrouping]);\n\n  // Paginate data with enhanced grouping support\n  const totalPages = useMemo(() => {\n    const dataLength = sortedData.length;\n    if (dataLength === 0) {\n      // During grouping transitions, ensure we always have at least 1 page\n      return effectiveEnableGrouping ? 1 : 0;\n    }\n    return Math.ceil(dataLength / rowsPerPage);\n  }, [sortedData.length, rowsPerPage, effectiveEnableGrouping]);\n  \n  // Ensure current page is within bounds - smart adjustment for grouping\n  const adjustedCurrentPage = useMemo(() => {\n    if (totalPages === 0) return 1;\n    if (currentPage > totalPages) {\n      // If current page exceeds total pages, go to last page\n      return totalPages;\n    }\n    return currentPage;\n  }, [currentPage, totalPages]);\n  \n  // Use adjusted page for pagination\n  const paginatedData = enablePagination ? sortedData.slice((adjustedCurrentPage - 1) * rowsPerPage, adjustedCurrentPage * rowsPerPage) : sortedData;\n  \n  // Sync the adjusted page back to the parent if it changed\n  useEffect(() => {\n    if (adjustedCurrentPage !== currentPage && onPageChange) {\n      onPageChange(adjustedCurrentPage);\n    }\n  }, [adjustedCurrentPage, currentPage, onPageChange]);\n\n  // Calculate dynamic height\n  const tableBodyHeight = useMemo(() => {\n    if (!dynamicHeight) return maxHeight;\n\n    // In fullscreen mode, allow table to expand to fit all rows without vertical scroll\n    if (isFullScreen) {\n      const dataRowsCount = paginatedData.length || 1;\n      const frozenRowsHeight = frozenRowIds.length * rowHeight;\n      return dataRowsCount * rowHeight + frozenRowsHeight;\n    }\n    const dataRowsCount = paginatedData.length || 1;\n    const calculatedHeight = dataRowsCount * rowHeight;\n    return Math.min(Math.max(calculatedHeight, minHeight), maxHeight);\n  }, [dynamicHeight, paginatedData.length, rowHeight, minHeight, maxHeight, isFullScreen, frozenRowIds.length]);\n\n  // ====================== SCROLL SYNCHRONIZATION ======================\n\n  const headerScrollRef = useRef<HTMLDivElement>(null);\n  const bodyScrollRef = useRef<HTMLDivElement>(null);\n  const isScrollingRef = useRef(false);\n  const syncHorizontalScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (isScrollingRef.current) return;\n    const sourceElement = e.currentTarget;\n    const scrollLeft = sourceElement.scrollLeft;\n    isScrollingRef.current = true;\n\n    // Sync scroll positions between header and body containers\n    if (sourceElement === headerScrollRef.current && bodyScrollRef.current) {\n      bodyScrollRef.current.scrollLeft = scrollLeft;\n    } else if (sourceElement === bodyScrollRef.current && headerScrollRef.current) {\n      headerScrollRef.current.scrollLeft = scrollLeft;\n    }\n\n    // Reset flag after a brief delay\n    setTimeout(() => {\n      isScrollingRef.current = false;\n    }, 10);\n  }, []);\n\n  // ====================== COLUMN RESIZING HANDLERS ======================\n\n  const handleResizeStart = useCallback((e: React.MouseEvent, columnKey: string) => {\n    console.log('🔧 Resize start:', columnKey, 'clientX:', e.clientX);\n    e.preventDefault();\n    e.stopPropagation();\n    \n    setIsResizing(true);\n    setResizingColumn(columnKey);\n    resizeStartX.current = e.clientX;\n    resizeStartWidth.current = parseInt(getColumnWidth(columnKey)) || 140;\n    \n    // console.log('🔧 Initial width:', resizeStartWidth.current);\n    \n    // Force update the cursor immediately\n    document.body.style.cursor = 'col-resize';\n    document.body.style.userSelect = 'none';\n    \n    // Add event listeners\n    const handleMouseMove = (moveEvent: MouseEvent) => {\n      if (!columnKey) return;\n      \n      const deltaX = moveEvent.clientX - resizeStartX.current;\n      const newWidth = Math.max(80, resizeStartWidth.current + deltaX);\n      \n      // console.log('🔧 Resize move:', columnKey, 'deltaX:', deltaX, 'newWidth:', newWidth);\n      \n      const newWidths = {\n        ...columnWidths,\n        [columnKey]: `${newWidth}px`\n      };\n      \n      setColumnWidths(newWidths);\n      onColumnWidthsChange?.(newWidths);\n    };\n    \n    const handleMouseUp = () => {\n      // console.log('🔧 Resize end:', columnKey);\n      \n      setIsResizing(false);\n      setResizingColumn(null);\n      \n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = '';\n      document.body.style.userSelect = '';\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  }, [getColumnWidth, columnWidths, onColumnWidthsChange]);\n\n  const handleToggleFrozenColumn = useCallback((columnKey: string, checked: boolean) => {\n    setExperimentalFrozenColumns(prev => {\n      if (checked) {\n        // Enforce maximum of 2 frozen columns\n        if (prev.length >= 2) {\n          return [prev[1], columnKey]; // Replace oldest with newest\n        }\n        return [...prev, columnKey];\n      } else {\n        return prev.filter(key => key !== columnKey);\n      }\n    });\n  }, []);\n  const handleClearFrozenColumns = useCallback(() => {\n    setExperimentalFrozenColumns([]);\n  }, []);\n  const handleToggleFrozenRow = useCallback((rowId: string, checked: boolean) => {\n    setFrozenRowIds(prev => {\n      if (checked) {\n        // Enforce maximum of 2 frozen rows\n        if (prev.length >= 2) {\n          return [prev[1], rowId]; // Replace oldest with newest\n        }\n        return [...prev, rowId];\n      } else {\n        return prev.filter(id => id !== rowId);\n      }\n    });\n  }, []);\n\n  // ====================== EVENT HANDLERS ======================\n\n  const handleSort = useCallback((key: string) => {\n    const newSortConfig = {\n      key,\n      direction: sortConfig.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc'\n    } as SortConfig;\n    setSortConfig(newSortConfig);\n    onSortChange?.(newSortConfig);\n  }, [sortConfig, onSortChange]);\n  const handleSelectRow = useCallback((id: string, checked: boolean) => {\n    let newSelection: string[];\n    if (checked) {\n      newSelection = [...selectedRows, id];\n    } else {\n      newSelection = selectedRows.filter(rowId => rowId !== id);\n      setSelectAllPages(false);\n    }\n    onSelectionChange?.(newSelection);\n  }, [selectedRows, onSelectionChange]);\n  const handleSelectAllCurrent = useCallback((checked: boolean) => {\n    if (checked) {\n      const currentPageIds = paginatedData.map(record => record.id);\n      onSelectionChange?.(currentPageIds);\n    } else {\n      onSelectionChange?.([]);\n      setSelectAllPages(false);\n    }\n  }, [paginatedData, onSelectionChange]);\n  const handleSelectAllPages = useCallback(() => {\n    const allIds = sortedData.map(record => record.id);\n    onSelectionChange?.(allIds);\n    setSelectAllPages(true);\n  }, [sortedData, onSelectionChange]);\n  const handleColumnsChange = useCallback((newColumns: DataTableColumn<T>[]) => {\n    setColumns(newColumns);\n    onColumnsChange?.(newColumns);\n  }, [onColumnsChange]);\n\n  // ====================== SELECTION STATE ======================\n\n  const areAllCurrentPageSelected = paginatedData.length > 0 && paginatedData.every(record => selectedRows.includes(record.id));\n  const selectionCount = selectAllPages ? sortedData.length : selectedRows.length;\n\n  // ====================== HELPER FUNCTIONS ======================\n\n  const getColumnStyle = useCallback((column: DataTableColumn<T>, index: number, isFrozen: boolean) => {\n    const isExperimentallyFrozen = experimentalFrozenColumns.includes(column.key);\n    const baseStyle = {\n      width: getActualColumnWidth(column.key),\n      minWidth: isFullScreen ? 'auto' : getColumnWidth(column.key),\n      maxWidth: isFullScreen ? 'none' : getColumnWidth(column.key)\n    };\n    if (isFrozen) {\n      const leftPosition = enableSelection ? 48 + frozenColumns.slice(0, index).reduce((acc, col) => acc + parseInt(getActualColumnWidth(col.key)), 0) : frozenColumns.slice(0, index).reduce((acc, col) => acc + parseInt(getActualColumnWidth(col.key)), 0);\n      return {\n        ...baseStyle,\n        left: `${leftPosition}px`,\n        backgroundColor: isExperimentallyFrozen ? '#f8fafc' : 'white',\n        // Subtle tint for experimental columns\n        borderRight: isExperimentallyFrozen ? '2px solid #e2e8f0' : '1px solid #e5e7eb'\n      };\n    }\n    return baseStyle;\n  }, [experimentalFrozenColumns, enableSelection, frozenColumns, getActualColumnWidth, isFullScreen, getColumnWidth]);\n\n  // ====================== TOOLBAR COMPONENTS ======================\n\n  const searchBar = <div className=\"relative w-96\">\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n      <Input placeholder={searchPlaceholder} className=\"pl-9 w-full\" value={searchQuery} onChange={e => setSearchQuery(e.target.value)} />\n    </div>;\n  const filtersButton = effectiveFilters.length > 0 && <Popover open={isFilterOpen} onOpenChange={setIsFilterOpen}>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" className=\"gap-2 bg-[#0097ee] hover:bg-[#0097ee]/90 text-white border-[#0097ee]\">\n          <Filter className=\"h-4 w-4\" /> \n          Filters\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80 bg-white z-50\" align=\"end\">\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium leading-none\">Filters</h4>\n          {effectiveFilters.map(filter => <div key={filter.key} className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">{filter.label}</label>\n              {filter.type === 'multi-select' && filter.options && <div className=\"space-y-1\">\n                  {filter.searchable && <Input placeholder={`Search ${filter.label.toLowerCase()}...`} value={filterSearchTerms[filter.key] || ''} onChange={e => setFilterSearchTerms(prev => ({\n              ...prev,\n              [filter.key]: e.target.value\n            }))} className=\"text-sm\" />}\n                  <div className=\"max-h-40 overflow-y-auto space-y-1\">\n                    {filter.options.filter(option => !filter.searchable || !filterSearchTerms[filter.key] || option.label.toLowerCase().includes(filterSearchTerms[filter.key].toLowerCase())).map(option => <div key={option.value} className=\"flex items-center space-x-2\">\n                          <Checkbox id={`${filter.key}-${option.value}`} checked={effectiveActiveFilters[filter.key]?.includes(option.value) || false} onCheckedChange={(checked: boolean) => {\n                    const current = effectiveActiveFilters[filter.key] || [];\n                    if (checked) {\n                      handleInternalFilterChange(filter.key, [...current, option.value]);\n                    } else {\n                      handleInternalFilterChange(filter.key, current.filter(v => v !== option.value));\n                    }\n                }} />\n                          <label htmlFor={`${filter.key}-${option.value}`} className=\"text-sm cursor-pointer flex items-center gap-2\">\n                            {filter.statusColors && option.color && <Badge className={`${option.color} text-xs`}>\n                                {option.label}\n                              </Badge>}\n                            {(!filter.statusColors || !option.color) && option.label}\n                          </label>\n                        </div>)}\n                  </div>\n                </div>}\n            </div>)}\n          <div className=\"flex justify-between\">\n            <Button variant=\"outline\" size=\"sm\" onClick={() => {\n            handleInternalClearAllFilters();\n            setFilterSearchTerms({});\n          }}>\n              Clear All\n            </Button>\n            <Button size=\"sm\" className=\"bg-[#0097ee] hover:bg-[#0097ee]/90\" onClick={() => setIsFilterOpen(false)}>\n              Apply\n            </Button>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>;\n  const actionsDropdown = bulkActions.length > 0 && <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\">\n          Actions ({selectionCount}) <ChevronDown className=\"h-4 w-4 ml-1\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"start\">\n        {bulkActions.map((action, index) => <DropdownMenuItem key={action.key} className=\"flex items-center gap-2\" disabled={action.requiresSelection !== false && selectionCount === 0} onClick={() => action.onClick(selectAllPages ? sortedData.map(r => r.id) : selectedRows)}>\n            {action.icon && <action.icon className=\"h-4 w-4\" />}\n            <span>{action.label}</span>\n          </DropdownMenuItem>)}\n        \n        <DropdownMenuSeparator />\n        \n        {/* Legacy Grouping Feature - only show if not using new API */}\n        {(enableGrouping && !groupingConfig.enabled) && (\n          <DropdownMenuGroup>\n            <DropdownMenu>\n              <DropdownMenuTrigger className=\"flex items-center gap-2 w-full px-2 py-1.5 text-sm hover:bg-accent rounded-sm\">\n                <Group className=\"h-4 w-4\" />\n                <span>Group By</span>\n                {effectiveGroupBy && <Badge variant=\"secondary\" className=\"ml-auto text-xs\">\n                  {enabledColumns.find(col => col.key === effectiveGroupBy)?.label || effectiveGroupBy}\n                </Badge>}\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"w-56\" side=\"right\">\n                <DropdownMenuLabel className=\"text-xs\">\n                  Group data by column\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                \n                {/* No grouping option */}\n                <DropdownMenuCheckboxItem \n                  checked={!effectiveGroupBy} \n                  onCheckedChange={() => handleGroupByChange(null)}\n                >\n                  No Grouping\n                </DropdownMenuCheckboxItem>\n                \n                <DropdownMenuSeparator />\n                \n                {/* Groupable columns */}\n                {enabledColumns\n                  .filter(column => column.groupable !== false)\n                  .map(column => (\n                    <DropdownMenuCheckboxItem \n                      key={column.key}\n                      checked={effectiveGroupBy === column.key} \n                      onCheckedChange={(checked) => {\n                        if (checked) {\n                          handleGroupByChange(column.key);\n                        } else {\n                          handleGroupByChange(null);\n                        }\n                      }}\n                    >\n                      {column.label}\n                    </DropdownMenuCheckboxItem>\n                  ))}\n                \n                {effectiveGroupBy && (\n                  <>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem onClick={expandAllGroups}>\n                      <ChevronDown className=\"h-4 w-4 mr-2\" />\n                      Expand All Groups\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={collapseAllGroups}>\n                      <ChevronRight className=\"h-4 w-4 mr-2\" />\n                      Collapse All Groups\n                    </DropdownMenuItem>\n                  </>\n                )}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </DropdownMenuGroup>\n        )}\n        \n        {/* Column Freezing Feature - Available in All Modes */}\n        <DropdownMenuGroup>\n          \n          \n          <DropdownMenu>\n            <DropdownMenuTrigger className=\"flex items-center gap-2 w-full px-2 py-1.5 text-sm hover:bg-accent rounded-sm\">\n              <Columns className=\"h-4 w-4\" />\n              <span>Freeze Columns</span>\n              {experimentalFrozenColumns.length > 0 && <Badge variant=\"secondary\" className=\"ml-auto text-xs\">\n                  {experimentalFrozenColumns.length}\n                </Badge>}\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\" side=\"right\">\n              <DropdownMenuLabel className=\"text-xs\">\n                Select up to 2 columns to freeze\n              </DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              \n              {enabledColumns.map(column => <DropdownMenuCheckboxItem key={column.key} checked={experimentalFrozenColumns.includes(column.key)} onCheckedChange={checked => handleToggleFrozenColumn(column.key, checked)} disabled={!experimentalFrozenColumns.includes(column.key) && experimentalFrozenColumns.length >= 2}>\n                  {column.label}\n                </DropdownMenuCheckboxItem>)}\n              \n              {experimentalFrozenColumns.length > 0 && <>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem onClick={handleClearFrozenColumns}>\n                    Clear Frozen Columns\n                  </DropdownMenuItem>\n                </>}\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          {/* Row Freezing Feature - Only Available in Fullscreen Mode */}\n          {isFullScreen && <DropdownMenuGroup>\n              \n              \n              \n              \n              <DropdownMenu>\n                \n                \n              </DropdownMenu>\n            </DropdownMenuGroup>}\n        </DropdownMenuGroup>\n\n        {enableColumnConfiguration && <>\n            <DropdownMenuSeparator />\n            <DropdownMenu>\n              <DropdownMenuTrigger className=\"flex items-center gap-2 w-full px-2 py-1.5 text-sm hover:bg-accent rounded-sm\">\n                <Settings className=\"h-4 w-4\" />\n                <span>Configure Columns</span>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"w-auto p-0\" side=\"right\">\n                <ColumnConfigurator columns={columns} onChange={handleColumnsChange} />\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </>}\n      </DropdownMenuContent>\n    </DropdownMenu>;\n  const fullScreenToggle = enableFullScreen && <Button variant=\"outline\" onClick={() => setIsFullScreen(!isFullScreen)} className=\"gap-2\" title={isFullScreen ? \"Exit full screen\" : \"Enter full screen\"}>\n      {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\n    </Button>;\n\n  // ====================== RENDER TABLE ======================\n\n  const renderTableContent = () => <div className=\"flex flex-col h-full\">\n      {/* Grouping Control - Top Position */}\n      {groupingConfig.position === 'top' && (\n        <div className=\"flex-shrink-0 p-2 bg-white border-b border-gray-200\">\n          <GroupingSelector\n            groupingConfig={groupingConfig}\n            columns={enabledColumns}\n            currentGroupBy={effectiveGroupBy}\n            onGroupByChange={handleGroupByChange}\n            expandAllGroups={expandAllGroups}\n            collapseAllGroups={collapseAllGroups}\n          />\n        </div>\n      )}\n\n      {/* Toolbar */}\n      <div className=\"flex-shrink-0 space-y-4 bg-white\">\n        {CustomToolbar ? <CustomToolbar selectedCount={selectionCount} searchBar={searchBar} filtersButton={filtersButton} actionsDropdown={actionsDropdown} fullScreenToggle={fullScreenToggle} columns={columns} onColumnsChange={handleColumnsChange} /> : <div className=\"flex items-center justify-between p-1 bg-gray-50 border-b border-gray-200 gap-2\">\n            <div className=\"flex items-center gap-4 mx-0 my-1\">\n              {actionsDropdown}\n              {searchBar}\n              {/* Grouping Control - Next to Filters Position */}\n              {groupingConfig.position === 'next-to-filters' && (\n                <GroupingSelector\n                  groupingConfig={groupingConfig}\n                  columns={enabledColumns}\n                  currentGroupBy={effectiveGroupBy}\n                  onGroupByChange={handleGroupByChange}\n                  expandAllGroups={expandAllGroups}\n                  collapseAllGroups={collapseAllGroups}\n                />\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {/* Grouping Control - Toolbar Position (with filters) */}\n              {groupingConfig.position === 'toolbar' && (\n                <GroupingSelector\n                  groupingConfig={groupingConfig}\n                  columns={enabledColumns}\n                  currentGroupBy={effectiveGroupBy}\n                  onGroupByChange={handleGroupByChange}\n                  expandAllGroups={expandAllGroups}\n                  collapseAllGroups={collapseAllGroups}\n                />\n              )}\n              {/* Grouping Control - Filters Position (same as toolbar but explicitly positioned) */}\n              {groupingConfig.position === 'filters' && (\n                <GroupingSelector\n                  groupingConfig={groupingConfig}\n                  columns={enabledColumns}\n                  currentGroupBy={effectiveGroupBy}\n                  onGroupByChange={handleGroupByChange}\n                  expandAllGroups={expandAllGroups}\n                  collapseAllGroups={collapseAllGroups}\n                />\n              )}\n              {filtersButton}\n              {fullScreenToggle}\n            </div>\n          </div>}\n\n        {/* Select all pages banner */}\n        {areAllCurrentPageSelected && !selectAllPages && enableSelectAllPages && sortedData.length > paginatedData.length && <div className=\"bg-blue-50 border border-blue-200 rounded-md p-3 flex items-center justify-between\">\n            <span className=\"text-sm text-blue-700\">\n              All {paginatedData.length} items on this page are selected.\n            </span>\n            <Button variant=\"link\" className=\"text-[#0097ee] hover:text-[#0097ee]/80 p-0 h-auto\" onClick={handleSelectAllPages}>\n              Select all {sortedData.length} items across all pages\n            </Button>\n          </div>}\n\n        {selectAllPages && <div className=\"bg-blue-50 border border-blue-200 rounded-md p-3 flex items-center justify-between\">\n            <span className=\"text-sm text-blue-700\">\n              All {sortedData.length} items across all pages are selected.\n            </span>\n            <Button variant=\"link\" className=\"text-[#0097ee] hover:text-[#0097ee]/80 p-0 h-auto\" onClick={() => {\n          onSelectionChange?.([]);\n          setSelectAllPages(false);\n        }}>\n              Clear selection\n            </Button>\n          </div>}\n\n        {/* Pagination */}\n        {enablePagination && <DataTablePagination currentPage={adjustedCurrentPage} totalPages={totalPages} filteredCount={sortedData.length} rowsPerPage={rowsPerPage} onPageChange={onPageChange || (() => {})} onRowsPerPageChange={onRowsPerPageChange || (() => {})} />}\n      </div>\n\n      {/* Table */}\n      <div className={isFullScreen ? \"flex-1\" : \"flex-1 min-h-0\"}>\n        <div className=\"border border-gray-200 rounded-md overflow-hidden flex flex-col\">\n          {/* Fixed Header */}\n          <div className={`bg-white border-b border-gray-200 flex-shrink-0 ${isFullScreen && freezeHeaderRow ? 'sticky top-0 z-50' : ''}`}>\n            <div ref={headerScrollRef} className=\"overflow-y-hidden overflow-x-auto\" style={{\n            height: '48px'\n          }} onScroll={syncHorizontalScroll}>\n              <div style={{\n              minWidth: `${totalTableWidth}px`,\n              width: isFullScreen ? `${totalTableWidth}px` : 'max-content'\n            }}>\n                <table className={`w-full border-collapse ${isFullScreen ? 'table-fixed' : ''}`} style={{\n                width: '100%'\n              }}>\n                  <thead>\n                    <tr className=\"h-12\">\n                      {/* Selection checkbox */}\n                      {enableSelection && <th className=\"sticky left-0 bg-white z-40 border-r border-gray-200 px-3 text-left font-medium text-muted-foreground text-sm\" style={{\n                      width: '48px',\n                      minWidth: '48px',\n                      maxWidth: '48px'\n                    }}>\n                          <Checkbox checked={areAllCurrentPageSelected} onCheckedChange={handleSelectAllCurrent} />\n                        </th>}\n\n                      {/* Frozen columns */}\n                      {frozenColumns.map((column, index) => <th key={column.key} className={`relative sticky bg-white z-30 border-r border-gray-200 px-3 py-2 text-left font-medium text-muted-foreground text-sm ${experimentalFrozenColumns.includes(column.key) ? 'bg-slate-50' : ''}`} style={getColumnStyle(column, index, true)}>\n                          <div className=\"flex items-center gap-2 cursor-pointer\" onClick={() => handleSort(column.key)}>\n                            {column.label}\n                            {experimentalFrozenColumns.includes(column.key) && <Pin className=\"h-3 w-3 text-blue-500\" />}\n                            {sortConfig.key === column.key && <span className=\"text-xs\">\n                                {sortConfig.direction === 'asc' ? '↑' : '↓'}\n                              </span>}\n                          </div>\n                          {/* Resize handle */}\n                          {(column.resizable !== false) && (\n                            <div\n                              className={`absolute top-1/2 -translate-y-1/2 right-0 w-0.5 h-6 cursor-col-resize transition-all duration-150 z-[70] ${\n                                isResizing && resizingColumn === column.key \n                                  ? 'bg-blue-500 opacity-100' \n                                  : 'bg-gray-300 opacity-50 hover:bg-blue-400 hover:opacity-100'\n                              }`}\n                              onMouseDown={(e) => {\n                                console.log('🔧 Frozen resize handle mousedown:', column.key);\n                                e.stopPropagation();\n                                e.preventDefault();\n                                handleResizeStart(e, column.key);\n                              }}\n                              onClick={(e) => {\n                                console.log('🔧 Frozen resize handle click:', column.key);\n                                e.stopPropagation();\n                                e.preventDefault();\n                              }}\n                              onMouseEnter={() => console.log('🔧 Frozen resize handle hover:', column.key)}\n                              title=\"Drag to resize column\"\n                            />\n                          )}\n                        </th>)}\n\n                      {/* Scrollable columns */}\n                      {scrollableColumns.map(column => <th key={column.key} className=\"relative border-r border-gray-200 px-3 py-2 text-left font-medium text-muted-foreground text-sm\" style={getColumnStyle(column, 0, false)}>\n                          <div className=\"flex items-center gap-2 cursor-pointer\" onClick={() => handleSort(column.key)}>\n                            {column.label}\n                            {sortConfig.key === column.key && <span className=\"text-xs\">\n                                {sortConfig.direction === 'asc' ? '↑' : '↓'}\n                              </span>}\n                          </div>\n                          {/* Resize handle */}\n                          {(column.resizable !== false) && (\n                            <div\n                              className={`absolute top-1/2 -translate-y-1/2 right-0 w-0.5 h-6 cursor-col-resize transition-all duration-150 z-[70] ${\n                                isResizing && resizingColumn === column.key \n                                  ? 'bg-blue-500 opacity-100' \n                                  : 'bg-gray-300 opacity-50 hover:bg-blue-400 hover:opacity-100'\n                              }`}\n                              onMouseDown={(e) => {\n                                console.log('🔧 Scrollable resize handle mousedown:', column.key);\n                                e.stopPropagation();\n                                e.preventDefault();\n                                handleResizeStart(e, column.key);\n                              }}\n                              onClick={(e) => {\n                                console.log('🔧 Scrollable resize handle click:', column.key);\n                                e.stopPropagation();\n                                e.preventDefault();\n                              }}\n                              onMouseEnter={() => console.log('🔧 Scrollable resize handle hover:', column.key)}\n                              title=\"Drag to resize column\"\n                            />\n                          )}\n                        </th>)}\n\n                      {/* Row actions column */}\n                      {rowActions && <th className=\"border-r border-gray-200 px-3 text-left font-medium text-muted-foreground text-sm\" style={{\n                      width: '64px',\n                      minWidth: '64px',\n                      maxWidth: '64px'\n                    }}>\n                          Actions\n                        </th>}\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          {/* Scrollable Body */}\n          <div ref={bodyScrollRef} className=\"flex-1 min-h-0 overflow-auto\" style={{\n          height: isFullScreen ? 'auto' : dynamicHeight ? `${tableBodyHeight}px` : `${maxHeight}px`,\n          maxHeight: isFullScreen ? 'none' : `${maxHeight}px`\n        }} onScroll={syncHorizontalScroll}>\n            <div style={{\n            minWidth: `${totalTableWidth}px`,\n            width: isFullScreen ? `${totalTableWidth}px` : 'max-content'\n          }}>\n              <table className={`w-full border-collapse ${isFullScreen ? 'table-fixed' : ''}`} style={{\n              width: '100%'\n            }}>\n                <tbody>\n                  {/* Frozen Rows - Only in Fullscreen Mode */}\n                  {isFullScreen && frozenRowIds.length > 0 && <>\n                      {frozenRowIds.map((frozenId, frozenIndex) => {\n                    const frozenRecord = paginatedData.find(record => record.id === frozenId);\n                    if (!frozenRecord) return null;\n                    return <tr key={`frozen-${frozenRecord.id}`} className={`sticky bg-blue-50 border-b-2 border-blue-200 cursor-pointer h-12 text-sm text-muted-foreground z-20`} style={{\n                      top: `${48 + frozenIndex * rowHeight}px`\n                    }} onClick={() => onRowClick?.(frozenRecord)}>\n                            {/* Selection checkbox */}\n                            {enableSelection && <td className=\"sticky left-0 bg-blue-50 z-30 border-r border-gray-200 px-3\" style={{\n                        width: '48px',\n                        minWidth: '48px',\n                        maxWidth: '48px'\n                      }} onClick={e => e.stopPropagation()}>\n                                <div className=\"flex items-center gap-1\">\n                                  <Checkbox checked={selectedRows.includes(frozenRecord.id)} onCheckedChange={(checked: boolean) => handleSelectRow(frozenRecord.id, checked)} />\n                                  <Pin className=\"h-3 w-3 text-blue-500\" />\n                                </div>\n                              </td>}\n\n                            {/* Frozen columns */}\n                            {frozenColumns.map((column, index) => <td key={column.key} className={`sticky bg-blue-50 z-20 border-r border-gray-200 px-3 whitespace-nowrap overflow-hidden text-ellipsis text-sm ${experimentalFrozenColumns.includes(column.key) ? 'bg-slate-50' : ''} ${column.className || ''}`} style={getColumnStyle(column, index, true)}>\n                                {column.render ? column.render(frozenRecord[column.key], frozenRecord) : String(frozenRecord[column.key] ?? '')}\n                              </td>)}\n\n                            {/* Scrollable columns */}\n                            {scrollableColumns.map(column => <td key={column.key} className={`bg-blue-50 border-r border-gray-100 px-3 whitespace-nowrap overflow-hidden text-ellipsis text-sm ${column.className || ''}`} style={getColumnStyle(column, 0, false)}>\n                                {column.render ? column.render(frozenRecord[column.key], frozenRecord) : String(frozenRecord[column.key] ?? '')}\n                              </td>)}\n\n                            {/* Row actions */}\n                            {rowActions && <td className=\"bg-blue-50 border-r border-gray-100 px-3\" style={{\n                        width: '64px',\n                        minWidth: '64px',\n                        maxWidth: '64px'\n                      }} onClick={e => e.stopPropagation()}>\n                                {rowActions(frozenRecord)}\n                              </td>}\n                          </tr>;\n                  })}\n                    </>}\n\n                  {/* Regular Data Rows */}\n                  {paginatedData.length > 0 ? paginatedData.filter(record => !frozenRowIds.includes(record.id)) // Exclude frozen rows from regular display\n                .map(record => {\n                  const typedRecord = record as T & GroupedRecord;\n                  \n                  // Handle grouped rows\n                  if (effectiveEnableGrouping && typedRecord.isGroupHeader) {\n                    const totalColumns = (enableSelection ? 1 : 0) + enabledColumns.length + (rowActions ? 1 : 0);\n                    \n                    return (\n                      <tr key={record.id} className=\"bg-gray-50 hover:bg-gray-100 border-b border-gray-200\">\n                        {/* Selection checkbox with expand/collapse button */}\n                        {enableSelection && <td className=\"sticky left-0 bg-gray-50 z-20 border-r border-gray-200 px-3 py-2\" style={{\n                          width: '48px',\n                          minWidth: '48px',\n                          maxWidth: '48px'\n                        }}>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"h-6 w-6 p-0\"\n                            onClick={() => toggleGroup(typedRecord.groupKey!)}\n                          >\n                            {expandedGroups.has(typedRecord.groupKey!) ? (\n                              <ChevronDown className=\"h-4 w-4\" />\n                            ) : (\n                              <ChevronRight className=\"h-4 w-4\" />\n                            )}\n                          </Button>\n                        </td>}\n\n                        {/* Group header with colspan to merge across all data columns */}\n                        <td \n                          colSpan={enabledColumns.length + (rowActions ? 1 : 0)} \n                          className=\"bg-gray-50 border-r border-gray-100 px-3 py-2\"\n                        >\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center gap-2\">\n                              {/* Expand/collapse button if no selection column */}\n                              {!enableSelection && (\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  className=\"h-6 w-6 p-0\"\n                                  onClick={() => toggleGroup(typedRecord.groupKey!)}\n                                >\n                                  {expandedGroups.has(typedRecord.groupKey!) ? (\n                                    <ChevronDown className=\"h-4 w-4\" />\n                                  ) : (\n                                    <ChevronRight className=\"h-4 w-4\" />\n                                  )}\n                                </Button>\n                              )}\n                              <div className=\"font-semibold text-gray-900 text-sm\">\n                                {typedRecord.groupName} ({typedRecord.groupSummary?.recordCount || 0} items)\n                              </div>\n                            </div>\n                            {/* Group summary stats */}\n                            {typedRecord.groupSummary && (\n                              <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                                <span>Total: {typedRecord.groupSummary.recordCount}</span>\n                                {typedRecord.groupSummary.totalInvoiceAmount && (\n                                  <span>Amount: ${typedRecord.groupSummary.totalInvoiceAmount.toLocaleString()}</span>\n                                )}\n                                {typedRecord.groupSummary.totalAmount && (\n                                  <span>Amount: ${typedRecord.groupSummary.totalAmount.toLocaleString()}</span>\n                                )}\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  }\n\n                  // Handle regular data rows (including child rows in groups)\n                  return (\n                    <tr key={record.id} className={`hover:bg-muted/50 border-b border-gray-100 cursor-pointer h-12 text-sm text-muted-foreground ${\n                      effectiveEnableGrouping && !typedRecord.isGroupHeader ? 'pl-4' : ''\n                    }`} onClick={() => onRowClick?.(record)}>\n                      {/* Selection checkbox */}\n                      {enableSelection && <td className={`sticky left-0 bg-white z-20 border-r border-gray-200 px-3 ${\n                        effectiveEnableGrouping && !typedRecord.isGroupHeader ? 'pl-8' : ''\n                      }`} style={{\n                        width: '48px',\n                        minWidth: '48px',\n                        maxWidth: '48px'\n                      }} onClick={e => e.stopPropagation()}>\n                        <Checkbox checked={selectedRows.includes(record.id)} onCheckedChange={(checked: boolean) => handleSelectRow(record.id, checked)} />\n                      </td>}\n\n                      {/* Frozen columns */}\n                      {frozenColumns.map((column, index) => <td key={column.key} className={`sticky bg-white z-10 border-r border-gray-200 px-3 whitespace-nowrap overflow-hidden text-ellipsis text-sm ${experimentalFrozenColumns.includes(column.key) ? 'bg-slate-50' : ''} ${column.className || ''}`} style={getColumnStyle(column, index, true)}>\n                        {column.render ? column.render(record[column.key], record) : String(record[column.key] ?? '')}\n                      </td>)}\n\n                      {/* Scrollable columns */}\n                      {scrollableColumns.map((column, colIdx) => <td key={column.key} className={`border-r border-gray-100 px-3 whitespace-nowrap overflow-hidden text-ellipsis text-sm ${column.className || ''}`} style={getColumnStyle(column, colIdx, false)}>\n                        {column.render ? column.render(record[column.key], record) : String(record[column.key] ?? '')}\n                      </td>)}\n\n                      {/* Row actions */}\n                      {rowActions && <td className=\"border-r border-gray-100 px-3\" style={{\n                        width: '64px',\n                        minWidth: '64px',\n                        maxWidth: '64px'\n                      }} onClick={e => e.stopPropagation()}>\n                        {rowActions(record)}\n                      </td>}\n                    </tr>\n                  );\n                }) : <tr>\n                      <td colSpan={(enableSelection ? 1 : 0) + enabledColumns.length + (rowActions ? 1 : 0)} className=\"text-center py-8 text-muted-foreground text-sm\">\n                        {emptyState || \"No data found matching your criteria\"}\n                      </td>\n                    </tr>}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Pagination */}\n      {enablePagination && <div className=\"flex-shrink-0 mt-4 bg-white\">\n          <DataTablePagination currentPage={adjustedCurrentPage} totalPages={totalPages} filteredCount={sortedData.length} rowsPerPage={rowsPerPage} onPageChange={onPageChange || (() => {})} onRowsPerPageChange={onRowsPerPageChange || (() => {})} />\n        </div>}\n    </div>;\n\n  // ====================== RENDER COMPONENT ======================\n\n  if (isFullScreen) {\n    return <div className=\"fixed inset-0 bg-white z-50 overflow-auto p-4\">\n        {renderTableContent()}\n      </div>;\n  }\n  return <div className=\"container mx-auto h-full\">\n      {renderTableContent()}\n    </div>;\n};\nexport default EnhancedDataTable;","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatCurrency(value: number): string {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(value);\n}\n\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"2-digit\",\n  }).format(date);\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        \"whitespace-pre-line break-words\", // Added for multi-line support\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { GripVertical } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport interface ColumnItem {\n  key: string;\n  label: string;\n  enabled: boolean;\n  position: number;\n}\n\ninterface ColumnConfiguratorProps {\n  columns: ColumnItem[];\n  onChange: (columns: ColumnItem[]) => void;\n}\n\nconst ColumnConfigurator: React.FC<ColumnConfiguratorProps> = ({ columns, onChange }) => {\n  const handleDragEnd = (result: any) => {\n    if (!result.destination) return;\n    \n    const items = Array.from(columns);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    \n    // Update positions\n    const reorderedItems = items.map((item, index) => ({\n      ...item,\n      position: index + 1\n    }));\n    \n    onChange(reorderedItems);\n  };\n\n  const handleColumnToggle = (key: string) => {\n    const updatedColumns = columns.map(column => {\n      if (column.key === key) {\n        return {\n          ...column,\n          enabled: !column.enabled\n        };\n      }\n      return column;\n    });\n    \n    onChange(updatedColumns);\n  };\n\n  return (\n    <div className=\"w-80 max-h-96 overflow-y-auto\">\n      <div className=\"p-3 border-b\">\n        <h3 className=\"font-medium\">Configure Columns</h3>\n        <p className=\"text-sm text-muted-foreground\">Drag to reorder, toggle to show/hide</p>\n      </div>\n      <div className=\"p-3 space-y-1\">\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"columns\">\n            {(provided) => (\n              <div \n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"space-y-2\"\n              >\n                {columns.map((column, index) => (\n                  <Draggable key={column.key} draggableId={column.key} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        className={cn(\n                          \"flex items-center p-2 rounded-md border transition-all\",\n                          column.enabled ? \"bg-white\" : \"bg-gray-50 text-gray-500\",\n                          snapshot.isDragging ? \"border-[#0097ee] shadow-lg bg-white z-50 transform rotate-1\" : \"border-gray-200\"\n                        )}\n                        style={{\n                          ...provided.draggableProps.style,\n                          opacity: snapshot.isDragging ? 0.9 : 1,\n                          transform: snapshot.isDragging \n                            ? `${provided.draggableProps.style?.transform} rotate(1deg)` \n                            : provided.draggableProps.style?.transform\n                        }}\n                      >\n                        <div {...provided.dragHandleProps} className=\"mr-2 cursor-grab active:cursor-grabbing\">\n                          <GripVertical className=\"h-4 w-4 text-gray-400\" />\n                        </div>\n                        <div className=\"flex items-center space-x-2 flex-1\">\n                          <Checkbox \n                            id={column.key} \n                            checked={column.enabled}\n                            onCheckedChange={() => handleColumnToggle(column.key)}\n                          />\n                          <Label \n                            htmlFor={column.key} \n                            className={cn(\"cursor-pointer flex-1\", !column.enabled && \"text-gray-500\")}\n                          >\n                            {column.label}\n                          </Label>\n                          <span className=\"text-xs text-gray-400 font-mono min-w-[2rem] text-center\">\n                            #{column.position}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnConfigurator;\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import React, { useState } from 'react';\nimport { Pagination, PaginationContent, PaginationItem, PaginationNext, PaginationPrevious, PaginationLink, PaginationEllipsis } from \"./pagination\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./select\";\nimport { Input } from \"./input\";\nimport { Button } from \"./button\";\n\ninterface DataTablePaginationProps {\n  currentPage: number;\n  totalPages: number;\n  filteredCount: number;\n  rowsPerPage: number;\n  onPageChange: (page: number) => void;\n  onRowsPerPageChange: (rowsPerPage: number) => void;\n  itemName?: string; // Generic item name (e.g., \"records\", \"items\", \"entries\")\n}\n\nconst DataTablePagination: React.FC<DataTablePaginationProps> = ({\n  currentPage,\n  totalPages,\n  filteredCount,\n  rowsPerPage,\n  onPageChange,\n  onRowsPerPageChange,\n  itemName = \"records\"\n}) => {\n  const [jumpToPage, setJumpToPage] = useState('');\n\n  // Generate pagination items\n  const renderPaginationItems = () => {\n    const items = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        items.push(\n          <PaginationItem key={i}>\n            <PaginationLink \n              isActive={currentPage === i} \n              onClick={() => onPageChange(i)} \n              className=\"h-5 min-w-5 px-1.5 text-xs\"\n            >\n              {i}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n    } else {\n      // Always show first page\n      items.push(\n        <PaginationItem key={1}>\n          <PaginationLink \n            isActive={currentPage === 1} \n            onClick={() => onPageChange(1)} \n            className=\"h-5 min-w-5 px-1.5 text-xs\"\n          >\n            1\n          </PaginationLink>\n        </PaginationItem>\n      );\n\n      // Calculate start and end of visible range\n      let startPage = Math.max(2, currentPage - 1);\n      let endPage = Math.min(totalPages - 1, startPage + 2);\n\n      // Adjust range if at edges\n      if (currentPage <= 3) {\n        startPage = 2;\n        endPage = Math.min(4, totalPages - 1);\n      } else if (currentPage >= totalPages - 2) {\n        endPage = totalPages - 1;\n        startPage = Math.max(2, endPage - 2);\n      }\n\n      // Show ellipsis if needed after first page\n      if (startPage > 2) {\n        items.push(\n          <PaginationItem key=\"ellipsis1\">\n            <PaginationEllipsis className=\"h-5 w-5\" />\n          </PaginationItem>\n        );\n      }\n\n      // Show middle pages\n      for (let i = startPage; i <= endPage; i++) {\n        items.push(\n          <PaginationItem key={i}>\n            <PaginationLink \n              isActive={currentPage === i} \n              onClick={() => onPageChange(i)} \n              className=\"h-5 min-w-5 px-1.5 text-xs\"\n            >\n              {i}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n\n      // Show ellipsis if needed before last page\n      if (endPage < totalPages - 1) {\n        items.push(\n          <PaginationItem key=\"ellipsis2\">\n            <PaginationEllipsis className=\"h-5 w-5\" />\n          </PaginationItem>\n        );\n      }\n\n      // Always show last page\n      if (totalPages > 1) {\n        items.push(\n          <PaginationItem key={totalPages}>\n            <PaginationLink \n              isActive={currentPage === totalPages} \n              onClick={() => onPageChange(totalPages)} \n              className=\"h-5 min-w-5 px-1.5 text-xs\"\n            >\n              {totalPages}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n    }\n    return items;\n  };\n\n  // Handle page jump\n  const handleJumpToPage = () => {\n    const page = parseInt(jumpToPage);\n    if (!isNaN(page) && page >= 1 && page <= totalPages) {\n      onPageChange(page);\n      setJumpToPage('');\n    }\n  };\n\n  // Handle key press on jump input\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleJumpToPage();\n    }\n  };\n  \n  // Always show pagination to maintain consistent UX\n  // Only hide if there's truly no data at all\n  if (totalPages === 0 && filteredCount === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"pt-0 pb-0\">\n      {/* Compact single row with display info on the left */}\n      <div className=\"flex items-center justify-between gap-4 text-xs px-[2px] py-0 my-[5px]\">\n        {/* Left: Display info and rows per page */}\n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-gray-500 whitespace-nowrap\">\n            Displaying {Math.min((currentPage - 1) * rowsPerPage + 1, Math.max(filteredCount, 1))} to {Math.min(currentPage * rowsPerPage, Math.max(filteredCount, 1))} of {Math.max(filteredCount, 1)} {itemName}\n          </div>\n          <div className=\"flex items-center gap-1.5\">\n            <span className=\"text-gray-500 whitespace-nowrap\">Show</span>\n            <Select \n              value={rowsPerPage.toString()} \n              onValueChange={value => onRowsPerPageChange(parseInt(value))}\n            >\n              <SelectTrigger className=\"w-14 h-5 text-xs border-gray-300 pl-2 pr-1\">\n                <SelectValue>{rowsPerPage}</SelectValue>\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"10\">10</SelectItem>\n                <SelectItem value=\"20\">20</SelectItem>\n                <SelectItem value=\"50\">50</SelectItem>\n                <SelectItem value=\"100\">100</SelectItem>\n              </SelectContent>\n            </Select>\n            <span className=\"text-gray-500 whitespace-nowrap px-[4px]\">per page</span>\n          </div>\n        </div>\n        \n        {/* Right: Navigation and jump controls */}\n        <div className=\"flex items-center gap-3\">\n          <Pagination>\n            <PaginationContent className=\"gap-0.5\">\n              <PaginationItem>\n                <PaginationPrevious \n                  onClick={() => onPageChange(Math.max(1, currentPage - 1))} \n                  className={`h-5 px-1.5 text-xs gap-1 ${currentPage === 1 || totalPages === 0 ? 'pointer-events-none opacity-50' : ''}`} \n                />\n              </PaginationItem>\n              \n              {renderPaginationItems()}\n              \n              <PaginationItem>\n                <PaginationNext \n                  onClick={() => onPageChange(Math.min(Math.max(totalPages, 1), currentPage + 1))} \n                  className={`h-5 px-1.5 text-xs gap-1 ${currentPage >= Math.max(totalPages, 1) ? 'pointer-events-none opacity-50' : ''}`} \n                />\n              </PaginationItem>\n            </PaginationContent>\n          </Pagination>\n          \n          <div className=\"flex items-center gap-1\">\n            <span className=\"text-gray-500 whitespace-nowrap\">Go to</span>\n            <Input \n              className=\"w-10 h-5 text-center text-xs border-gray-300\" \n              value={jumpToPage} \n              onChange={e => setJumpToPage(e.target.value)} \n              onKeyDown={handleKeyPress} \n              aria-label=\"Jump to page\" \n              type=\"text\" \n              inputMode=\"numeric\" \n              pattern=\"[0-9]*\" \n            />\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"h-5 px-1.5 text-xs border-gray-300\" \n              onClick={handleJumpToPage} \n              disabled={!jumpToPage || isNaN(parseInt(jumpToPage)) || parseInt(jumpToPage) < 1 || parseInt(jumpToPage) > totalPages}\n            >\n              Go\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTablePagination;\n","import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps } from \"@/components/ui/button\"\n\nconst Pagination = ({\n  className,\n  ...props\n}: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      \"inline-flex h-9 min-w-9 items-center justify-center rounded-md border border-input bg-background px-3 py-2 text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n      {\n        \"border-primary bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground\": isActive,\n      },\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import { useState, useMemo } from 'react';\n\nexport interface GroupedRecord {\n  id: string;\n  isGroupHeader: boolean;\n  groupKey?: string;\n  groupName?: string;\n  isExpanded?: boolean;\n  groupSummary?: any;\n  originalRecord?: any;\n}\n\nexport interface GroupSummary {\n  recordCount: number;\n  [key: string]: any; // Allow additional computed properties\n}\n\n// Default auto-summary calculator that works with any data structure\nconst createAutoSummaryCalculator = <T extends Record<string, any>>(records: T[]): GroupSummary => {\n  const summary: GroupSummary = {\n    recordCount: records.length\n  };\n\n  if (records.length === 0) return summary;\n\n  // Automatically detect and calculate numeric aggregations\n  const firstRecord = records[0];\n  Object.keys(firstRecord).forEach(key => {\n    const values = records.map(r => r[key]).filter(v => v != null);\n    \n    if (values.length === 0) return;\n    \n    // Handle numeric fields\n    if (typeof firstRecord[key] === 'number') {\n      const numbers = values.filter(v => typeof v === 'number') as number[];\n      if (numbers.length > 0) {\n        summary[`total_${key}`] = numbers.reduce((sum, val) => sum + val, 0);\n        summary[`avg_${key}`] = Math.round(summary[`total_${key}`] / numbers.length * 100) / 100;\n        summary[`min_${key}`] = Math.min(...numbers);\n        summary[`max_${key}`] = Math.max(...numbers);\n      }\n    }\n    \n    // Handle status/string fields - count occurrences\n    if (typeof firstRecord[key] === 'string') {\n      const statusCounts = values.reduce((acc, val) => {\n        const strVal = String(val);\n        acc[strVal] = (acc[strVal] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>);\n      \n      // Add individual status counts with safe property names\n      Object.entries(statusCounts).forEach(([status, count]) => {\n        const safeKey = `count_${key}_${status.toLowerCase().replace(/[^a-z0-9]/g, '_')}`;\n        summary[safeKey] = count;\n      });\n      \n      // Add most common value\n      const mostCommon = Object.entries(statusCounts).reduce((a, b) => (a[1] as number) > (b[1] as number) ? a : b);\n      summary[`most_common_${key}`] = mostCommon[0];\n    }\n    \n    // Handle boolean fields\n    if (typeof firstRecord[key] === 'boolean') {\n      const boolValues = values.filter(v => typeof v === 'boolean') as boolean[];\n      summary[`count_${key}_true`] = boolValues.filter(v => v).length;\n      summary[`count_${key}_false`] = boolValues.filter(v => !v).length;\n    }\n  });\n\n  return summary;\n};\n\nexport const useTableGrouping = <T extends Record<string, any>>(\n  data: T[],\n  groupBy: string | null,\n  summaryCalculator?: (records: T[]) => any\n) => {\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n\n  const toggleGroup = (groupKey: string) => {\n    setExpandedGroups(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(groupKey)) {\n        newSet.delete(groupKey);\n      } else {\n        newSet.add(groupKey);\n      }\n      return newSet;\n    });\n  };\n\n  const collapseAllGroups = () => {\n    setExpandedGroups(new Set());\n  };\n\n  const expandAllGroups = () => {\n    if (!groupBy) return;\n    const allGroups = new Set(data.map(record => String(record[groupBy])));\n    setExpandedGroups(allGroups);\n  };\n\n  const groupedData = useMemo(() => {\n    if (!groupBy) return data;\n\n    const groups = data.reduce((acc, record) => {\n      const groupKey = String(record[groupBy]);\n      if (!acc[groupKey]) {\n        acc[groupKey] = [];\n      }\n      acc[groupKey].push(record);\n      return acc;\n    }, {} as Record<string, T[]>);\n\n    const result: (T & GroupedRecord)[] = [];\n\n    Object.entries(groups).forEach(([groupKey, records]) => {\n      // Use custom calculator if provided, otherwise use auto-calculator\n      const groupSummary = summaryCalculator ? summaryCalculator(records) : createAutoSummaryCalculator(records);\n      \n      // Add group header\n      result.push({\n        ...records[0],\n        id: `group-header-${groupKey}`,\n        isGroupHeader: true,\n        groupKey,\n        groupName: groupKey,\n        isExpanded: expandedGroups.has(groupKey),\n        groupSummary,\n        originalRecord: null\n      } as T & GroupedRecord);\n\n      // Add group records immediately after group header if expanded\n      if (expandedGroups.has(groupKey)) {\n        console.log(`[DEBUG] Adding ${records.length} child records for expanded group: ${groupKey}`);\n        records.forEach((record, index) => {\n          result.push({\n            ...record,\n            id: `${record.id}-child-${index}`, // Ensure unique IDs for child rows\n            isGroupHeader: false,\n            groupKey,\n            originalRecord: record\n          } as T & GroupedRecord);\n        });\n      } else {\n        console.log(`[DEBUG] Group ${groupKey} is collapsed, not adding child records`);\n      }\n    });\n\n    console.log(`[DEBUG] Final grouped data length: ${result.length}`);\n    return result;\n  }, [data, groupBy, expandedGroups, summaryCalculator]);\n\n  return {\n    groupedData,\n    expandedGroups,\n    toggleGroup,\n    collapseAllGroups,\n    expandAllGroups,\n    groupCount: groupBy ? new Set(data.map(record => String(record[groupBy]))).size : 0\n  };\n};\n","import React from 'react';\n\nconst SimpleDataTable = ({ data, columns }: { \n  data: any[], \n  columns: { key: string; label: string }[] \n}) => {\n  return (\n    <div className=\"p-4 border rounded-lg\">\n      <h3 className=\"text-lg font-semibold mb-4\">Simple Data Table (Package Test)</h3>\n      <table className=\"w-full border-collapse border\">\n        <thead>\n          <tr>\n            {columns.map((col) => (\n              <th key={col.key} className=\"border p-2 bg-gray-100 text-left\">\n                {col.label}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, idx) => (\n            <tr key={idx}>\n              {columns.map((col) => (\n                <td key={col.key} className=\"border p-2\">\n                  {row[col.key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <p className=\"mt-2 text-sm text-gray-600\">\n        ✅ Package successfully imported and rendered! \n        ({data.length} rows, {columns.length} columns)\n      </p>\n    </div>\n  );\n};\n\nexport default SimpleDataTable;\n","import React from 'react';\n\ninterface AdvancedDataTableDemoProps {\n  data: any[];\n}\n\nconst AdvancedDataTableDemo: React.FC<AdvancedDataTableDemoProps> = ({ data }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        \n        {/* Feature Overview */}\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <h3 className=\"font-semibold text-blue-800 mb-2\">📊 Core Features</h3>\n          <ul className=\"text-sm text-blue-700 space-y-1\">\n            <li>✅ Advanced Search & Filtering</li>\n            <li>✅ Multi-column Sorting</li>\n            <li>✅ Row Selection (Single/Multiple)</li>\n            <li>✅ Pagination with Custom Page Sizes</li>\n            <li>✅ Data Export (CSV, Excel)</li>\n            <li>✅ Column Visibility Toggle</li>\n          </ul>\n        </div>\n\n        {/* Advanced Features */}\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <h3 className=\"font-semibold text-green-800 mb-2\">🚀 Advanced Features</h3>\n          <ul className=\"text-sm text-green-700 space-y-1\">\n            <li>✅ Column Freezing/Pinning</li>\n            <li>✅ Header Row Freezing</li>\n            <li>✅ Row Freezing</li>\n            <li>✅ Column Resizing</li>\n            <li>✅ Data Grouping</li>\n            <li>✅ Group Expand/Collapse</li>\n          </ul>\n        </div>\n\n        {/* UI Features */}\n        <div className=\"p-4 bg-purple-50 border border-purple-200 rounded-lg\">\n          <h3 className=\"font-semibold text-purple-800 mb-2\">🎨 UI Features</h3>\n          <ul className=\"text-sm text-purple-700 space-y-1\">\n            <li>✅ Full-screen Mode</li>\n            <li>✅ Dynamic Height</li>\n            <li>✅ Responsive Design</li>\n            <li>✅ Custom Toolbar</li>\n            <li>✅ Bulk Actions</li>\n            <li>✅ Row Actions Menu</li>\n          </ul>\n        </div>\n\n      </div>\n\n      {/* Feature Demonstrations */}\n      <div className=\"space-y-4\">\n        \n        {/* Column Configuration Demo */}\n        <div className=\"p-4 border rounded-lg\">\n          <h3 className=\"font-semibold mb-3\">Column Configuration Options</h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 text-sm\">\n            <div className=\"p-2 bg-gray-50 rounded\">\n              <strong>Sortable:</strong> Enable/disable sorting per column\n            </div>\n            <div className=\"p-2 bg-gray-50 rounded\">\n              <strong>Resizable:</strong> Drag to resize column widths\n            </div>\n            <div className=\"p-2 bg-gray-50 rounded\">\n              <strong>Frozen:</strong> Pin columns to left/right\n            </div>\n            <div className=\"p-2 bg-gray-50 rounded\">\n              <strong>Groupable:</strong> Allow grouping by column\n            </div>\n          </div>\n        </div>\n\n        {/* Data Types Demo */}\n        <div className=\"p-4 border rounded-lg\">\n          <h3 className=\"font-semibold mb-3\">Supported Data Types & Formatting</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">Numeric Data</h4>\n              <ul className=\"text-xs space-y-1\">\n                <li>• Currency formatting ($85,000)</li>\n                <li>• Percentage values (95.5%)</li>\n                <li>• Number formatting (1,234.56)</li>\n                <li>• Custom numeric renderers</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">Date & Time</h4>\n              <ul className=\"text-xs space-y-1\">\n                <li>• Date formatting (MM/DD/YYYY)</li>\n                <li>• Relative dates (2 days ago)</li>\n                <li>• Date range filtering</li>\n                <li>• Custom date renderers</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">Status & Tags</h4>\n              <ul className=\"text-xs space-y-1\">\n                <li>• Colored status badges</li>\n                <li>• Multi-select filters</li>\n                <li>• Custom tag renderers</li>\n                <li>• Status-based styling</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Grouping Demo */}\n        <div className=\"p-4 border rounded-lg\">\n          <h3 className=\"font-semibold mb-3\">Data Grouping Capabilities</h3>\n          <div className=\"space-y-2\">\n            <p className=\"text-sm\">Group by any column (Department, Status, etc.)</p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <strong>Group by Department:</strong>\n                <div className=\"ml-4 mt-1 space-y-1\">\n                  <div>📁 Engineering (3 employees)</div>\n                  <div>📁 Marketing (1 employee)</div>\n                  <div>📁 HR (1 employee)</div>\n                  <div>📁 Finance (1 employee)</div>\n                  <div>📁 Sales (1 employee)</div>\n                  <div>📁 Design (1 employee)</div>\n                </div>\n              </div>\n              <div>\n                <strong>Group by Status:</strong>\n                <div className=\"ml-4 mt-1 space-y-1\">\n                  <div>📁 Active (6 employees)</div>\n                  <div>📁 Pending (1 employee)</div>\n                  <div>📁 Inactive (1 employee)</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Pagination & Performance */}\n        <div className=\"p-4 border rounded-lg\">\n          <h3 className=\"font-semibold mb-3\">Pagination & Performance</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <strong>Pagination Options:</strong>\n              <ul className=\"mt-1 space-y-1\">\n                <li>• Configurable page sizes (5, 10, 20, 50, 100)</li>\n                <li>• Quick page navigation</li>\n                <li>• Total records display</li>\n                <li>• Go-to-page functionality</li>\n              </ul>\n            </div>\n            <div>\n              <strong>Performance Features:</strong>\n              <ul className=\"mt-1 space-y-1\">\n                <li>• Virtual scrolling for large datasets</li>\n                <li>• Dynamic height adjustment</li>\n                <li>• Optimized re-rendering</li>\n                <li>• Memory-efficient grouping</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Export & Actions */}\n        <div className=\"p-4 border rounded-lg\">\n          <h3 className=\"font-semibold mb-3\">Export & Action Capabilities</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <strong>Export Options:</strong>\n              <ul className=\"mt-1 space-y-1\">\n                <li>• CSV export with custom formatting</li>\n                <li>• Excel export with styling</li>\n                <li>• PDF export (via custom renderer)</li>\n                <li>• Export filtered/selected data only</li>\n              </ul>\n            </div>\n            <div>\n              <strong>Actions:</strong>\n              <ul className=\"mt-1 space-y-1\">\n                <li>• Bulk actions on selected rows</li>\n                <li>• Individual row action menus</li>\n                <li>• Custom action buttons</li>\n                <li>• Keyboard shortcuts</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      {/* Sample Data Display */}\n      <div className=\"p-4 border rounded-lg\">\n        <h3 className=\"font-semibold mb-3\">Sample Data Structure ({data.length} records)</h3>\n        <div className=\"text-sm bg-gray-50 p-3 rounded overflow-x-auto\">\n          <pre>{JSON.stringify(data[0], null, 2)}</pre>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default AdvancedDataTableDemo;\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted h-8\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-8 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-2 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { ArrowUp, ArrowDown } from 'lucide-react';\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from \"@/components/ui/table\";\n\nexport interface SortConfig {\n  key: string;\n  direction: 'asc' | 'desc';\n}\n\ninterface SortableTableHeaderProps {\n  column: {\n    key: string;\n    label: React.ReactNode;\n    className?: string;\n  };\n  sortConfig: SortConfig;\n  onSort: (key: string) => void;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const SortableTableHeader: React.FC<SortableTableHeaderProps> = ({\n  column,\n  sortConfig,\n  onSort,\n  style,\n  className\n}) => {\n  const isSorted = sortConfig.key === column.key;\n  \n  return (\n    <TableHead \n      className={cn(\n        \"cursor-pointer hover:bg-slate-100/50 transition-colors\",\n        isSorted ? \"font-bold text-primary active-sort-column\" : \"\",\n        column.className,\n        className\n      )}\n      onClick={() => onSort(column.key)}\n      style={style}\n    >\n      <div className=\"flex items-center justify-between\">\n        <span>{column.label}</span>\n        {isSorted && (\n          <span className=\"ml-1\">\n            {sortConfig.direction === 'asc' ? (\n              <ArrowUp className=\"h-4 w-4\" />\n            ) : (\n              <ArrowDown className=\"h-4 w-4\" />\n            )}\n          </span>\n        )}\n      </div>\n    </TableHead>\n  );\n};\n","import React from 'react';\nimport { TableRow, TableCell } from '@/components/ui/table';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { ChevronRight, ChevronDown } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { GroupedRecord } from '@/hooks/useTableGrouping';\n\ninterface GroupableTableRowProps {\n  record: any & GroupedRecord;\n  columns: any[];\n  isSelected: boolean;\n  onSelect: (id: string, checked: boolean) => void;\n  onRowClick?: (record: any) => void;\n  onToggleGroup?: (groupKey: string) => void;\n}\n\nexport const GroupableTableRow: React.FC<GroupableTableRowProps> = ({\n  record,\n  columns,\n  isSelected,\n  onSelect,\n  onRowClick,\n  onToggleGroup\n}) => {\n  console.log(`[DEBUG] Rendering row:`, {\n    id: record.id,\n    isGroupHeader: record.isGroupHeader,\n    groupKey: record.groupKey,\n    groupName: record.groupName\n  });\n\n  if (record.isGroupHeader) {\n    return (\n      <TableRow className=\"bg-gray-50 hover:bg-gray-100 border-b border-gray-200\">\n        <TableCell className=\"py-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-6 w-6 p-0\"\n            onClick={() => onToggleGroup?.(record.groupKey!)}\n          >\n            {record.isExpanded ? (\n              <ChevronDown className=\"h-4 w-4\" />\n            ) : (\n              <ChevronRight className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </TableCell>\n        <TableCell colSpan={columns.length} className=\"py-2\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"font-semibold text-gray-900 text-sm\">\n              {record.groupName} ({record.groupSummary?.recordCount || 0} items)\n            </div>\n            {record.groupSummary && (\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span>Total: {record.groupSummary.totalExpected}</span>\n                <span>Active: {record.groupSummary.totalActual}</span>\n                <span>Inactive: {record.groupSummary.totalVacancy}</span>\n                <Badge className={`${record.groupSummary.totalVacancy > 0 ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}`}>\n                  {record.groupSummary.fillRate}% filled\n                </Badge>\n              </div>\n            )}\n          </div>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableRow \n      className=\"cursor-pointer hover:bg-muted/50 h-10\"\n      onClick={() => onRowClick?.(record.originalRecord || record)}\n    >\n      <TableCell onClick={(e) => e.stopPropagation()} className=\"py-2 pl-8\">\n        <Checkbox\n          checked={isSelected}\n          onCheckedChange={(checked: boolean) => onSelect(record.id, checked)}\n        />\n      </TableCell>\n      {columns.map(column => (\n        <TableCell key={column.key} className={`${column.className} py-2`}>\n          {column.render ? column.render(record[column.key], record.originalRecord || record) : record[column.key]}\n        </TableCell>\n      ))}\n    </TableRow>\n  );\n};\n"],"mappings":"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","names":["Label","import_react","React","import_jsx_runtime","React","import_jsx_runtime","import_class_variance_authority","import_jsx_runtime","React","import_lucide_react","import_jsx_runtime","React","import_jsx_runtime","import_lucide_react","React","import_class_variance_authority","import_jsx_runtime","Label","import_lucide_react","import_jsx_runtime","provided","Label","React","import_lucide_react","import_jsx_runtime","React","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_react","import_jsx_runtime","value","React","checkboxWidth","actionWidth","dataRowsCount","import_jsx_runtime","import_jsx_runtime","React","import_jsx_runtime","React","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_lucide_react","import_jsx_runtime"]}